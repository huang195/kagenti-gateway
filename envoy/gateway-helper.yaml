apiVersion: v1
kind: ServiceAccount
metadata:
  name: mcp-gateway
  namespace: mcp-gateway
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: httproute-watcher
rules:
- apiGroups: ["gateway.networking.k8s.io"]
  resources: ["httproutes"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: httproute-watcher-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: httproute-watcher
subjects:
- kind: ServiceAccount
  name: mcp-gateway
  namespace: mcp-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mcp-gateway-server
  namespace: mcp-gateway
  labels:
    app: mcp-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mcp-gateway
  template:
    metadata:
      labels:
        app: mcp-gateway
    spec:
      serviceAccountName: mcp-gateway
      containers:
        - name: mcp-gateway
          image: ghcr.io/huang195/mcp:latest
          imagePullPolicy: Always
          command: ["sh", "-c"]
          args:
            - uv run /app/mcp-server/mcp-gateway/mcp-gateway.py
          ports:
            - containerPort: 8000
---
apiVersion: v1
kind: Service
metadata:
  name: mcp-gateway-service
  namespace: mcp-gateway
spec:
  selector:
    app: mcp-gateway
  ports:
    - protocol: TCP
      port: 8000
      targetPort: 8000
  type: ClusterIP
---
apiVersion: gateway.networking.k8s.io/v1
kind: HTTPRoute
metadata:
  name: mcp-gateway-route
  namespace: mcp-gateway
spec:
  parentRefs:
  - name: eg
    namespace: mcp-gateway
  rules:
  - backendRefs:
    - group: ""
      kind: Service
      namespace: mcp-gateway
      name: mcp-gateway-service
      port: 8000
      weight: 1
    matches:
    - path:
        type: PathPrefix
        value: /mcp/
